@page "/fetchdata"

@using CardUI.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section id="team" class="pb-5">
        <div class="container">
            <div class="row">
                @foreach (var forecast in forecasts)
                {
                    <div class="col-xs-12 col-sm-8 col-md-6">
                        <div class="">
                            <div class="card">
                                <div class="card-body text-center">
                                    <div class="preview text-center">
                                        <img class="preview-img" src='@forecast.ImagePath' alt="Preview Image" width="100" height="100" />
                                    </div>
                                    <h4 class="card-title">Current Weather: @forecast.Summary</h4>
                                    <div class="text-left">
                                        <h5>Date: @forecast.Date.ToShortDateString()</h5>
                                    </div>
                                    <div class="form-group text-left">
                                        <h5>Temp. (C): @forecast.TemperatureC.ToString()</h5>
                                    </div>
                                    <div class="form-group text-left">
                                        <h5>Temp. (F): @forecast.TemperatureF.ToString()</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
